{"version":3,"sources":["test.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_toConsumableArray","arr","Array","isArray","arr2","from","concat","document","querySelectorAll","forEach","grid","griddie","Griddie","masonry","classList","contains","link","addEventListener","e","preventDefault","matches","filter","dataset","animate","getElementsByClassName","toggle","options"],"mappings":"AAAA,aAEA,IAAIA,SAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,GAEvP,SAASS,mBAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,IAAIT,EAAI,EAAGY,EAAOF,MAAMD,EAAIP,QAASF,EAAIS,EAAIP,OAAQF,IAAOY,EAAKZ,GAAKS,EAAIT,GAAM,OAAOY,EAAe,OAAOF,MAAMG,KAAKJ,GAE1L,GAAGK,OAAON,mBAAmBO,SAASC,iBAAiB,WAAWC,QAAQ,SAAUC,GAChF,IAAIC,EAAU,IAAIC,QAAQF,EAAM,CAC5BG,QAASH,EAAKI,UAAUC,SAAS,aAGrC,GAAGT,OAAON,mBAAmBO,SAASC,iBAAiB,cAAcC,QAAQ,SAAUO,GACnF,OAAOA,EAAKC,iBAAiB,QAAS,SAAUC,GAC5CA,EAAEC,iBAEEH,EAAKI,QAAQ,iBACbT,EAAQU,OAAOL,EAAKM,QAAQD,QAK5BL,EAAKI,QAAQ,kBACbT,EAAQY,QAAQ,WACZhB,SAASiB,uBAAuB,QAAQ,GAAGV,UAAUW,OAAO,cAMhET,EAAKI,QAAQ,oBACbT,EAAQY,QAAQ,WACZZ,EAAQe,QAAUtC,SAAS,GAAIuB,EAAQe,QAAS,CAAEb,SAAUF,EAAQe,QAAQb,UAC5EH,EAAKI,UAAUW,OAAO,YAAaf,EAAKI,UAAUW,OAAO","sourcesContent":["[...document.querySelectorAll('.grid')].forEach(grid => {\r\n    const griddie = new Griddie(grid, {\r\n        masonry: grid.classList.contains('masonry')\r\n    });\r\n\r\n    [...document.querySelectorAll('nav li a')].forEach(link =>\r\n        link.addEventListener('click', e => {\r\n            e.preventDefault();\r\n\r\n            if (link.matches('[data-filter]')) {\r\n                griddie.filter(link.dataset.filter);\r\n\r\n                return;\r\n            }\r\n\r\n            if (link.matches('#gutterToggler')) {\r\n                griddie.animate(() => {\r\n                    document.getElementsByClassName('grid')[0].classList.toggle('collapse');\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            if (link.matches('#masonryToggler')) {\r\n                griddie.animate(() => {\r\n                    griddie.options = { ...griddie.options, ...{ masonry: !griddie.options.masonry } };\r\n                    grid.classList.toggle('standard', !grid.classList.toggle('masonry'));\r\n                });\r\n\r\n                return;\r\n            }\r\n        })\r\n    );\r\n});\r\n"],"file":"test.min.js"}