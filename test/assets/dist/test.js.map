{"version":3,"sources":["test.js"],"names":["document","querySelectorAll","forEach","griddie","Griddie","grid","masonry","classList","contains","link","addEventListener","e","preventDefault","matches","filter","dataset","animate","getElementsByClassName","toggle","options"],"mappings":";;;;AAAA;;;;;;;;AAEA,6BAAIA,SAASC,gBAAT,CAA0B,OAA1B,CAAJ,GAAwCC,OAAxC,CAAgD,gBAAQ;AACpD,QAAMC,UAAU,IAAIC,iBAAJ,CAAYC,IAAZ,EAAkB;AAC9BC,iBAASD,KAAKE,SAAL,CAAeC,QAAf,CAAwB,SAAxB;AADqB,KAAlB,CAAhB;;AAIA,iCAAIR,SAASC,gBAAT,CAA0B,UAA1B,CAAJ,GAA2CC,OAA3C,CAAmD;AAAA,eAC/CO,KAAKC,gBAAL,CAAsB,OAAtB,EAA+B,aAAK;AAChCC,cAAEC,cAAF;;AAEA,gBAAIH,KAAKI,OAAL,CAAa,eAAb,CAAJ,EAAmC;AAC/BV,wBAAQW,MAAR,CAAeL,KAAKM,OAAL,CAAaD,MAA5B;;AAEA;AACH;;AAED,gBAAIL,KAAKI,OAAL,CAAa,gBAAb,CAAJ,EAAoC;AAChCV,wBAAQa,OAAR,CAAgB,YAAM;AAClBhB,6BAASiB,sBAAT,CAAgC,MAAhC,EAAwC,CAAxC,EAA2CV,SAA3C,CAAqDW,MAArD,CAA4D,UAA5D;AACH,iBAFD;;AAIA;AACH;;AAED,gBAAIT,KAAKI,OAAL,CAAa,iBAAb,CAAJ,EAAqC;AACjCV,wBAAQa,OAAR,CAAgB,YAAM;AAClBb,4BAAQgB,OAAR,gBAAuBhB,QAAQgB,OAA/B,EAA2C,EAAEb,SAAS,CAACH,QAAQgB,OAAR,CAAgBb,OAA5B,EAA3C;AACAD,yBAAKE,SAAL,CAAeW,MAAf,CAAsB,UAAtB,EAAkC,CAACb,KAAKE,SAAL,CAAeW,MAAf,CAAsB,SAAtB,CAAnC;AACH,iBAHD;;AAKA;AACH;AACJ,SAzBD,CAD+C;AAAA,KAAnD;AA4BH,CAjCD","file":"test.js","sourcesContent":["import Griddie from '../../../src/griddie.js';\r\n\r\n[...document.querySelectorAll('.grid')].forEach(grid => {\r\n    const griddie = new Griddie(grid, {\r\n        masonry: grid.classList.contains('masonry')\r\n    });\r\n\r\n    [...document.querySelectorAll('nav li a')].forEach(link =>\r\n        link.addEventListener('click', e => {\r\n            e.preventDefault();\r\n\r\n            if (link.matches('[data-filter]')) {\r\n                griddie.filter(link.dataset.filter);\r\n\r\n                return;\r\n            }\r\n\r\n            if (link.matches('#gutterToggler')) {\r\n                griddie.animate(() => {\r\n                    document.getElementsByClassName('grid')[0].classList.toggle('collapse');\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            if (link.matches('#masonryToggler')) {\r\n                griddie.animate(() => {\r\n                    griddie.options = { ...griddie.options, ...{ masonry: !griddie.options.masonry } };\r\n                    grid.classList.toggle('standard', !grid.classList.toggle('masonry'));\r\n                });\r\n\r\n                return;\r\n            }\r\n        })\r\n    );\r\n});\r\n"]}