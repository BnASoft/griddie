{"version":3,"sources":["griddie.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_typeof","Symbol","iterator","obj","constructor","_toConsumableArray","arr","Array","isArray","arr2","from","_classCallCheck","instance","TypeError","global","factory","exports","module","define","amd","Griddie","this","options","_options","_animationTimeout","_filterTimeout","layout","window","addEventListener","value","_this","layoutChanges","undefined","Promise","resolve","reject","callback","clear","store","transform","requestAnimationFrame","element","style","transition","transformTimingCSS","concat","items","filter","item","display","forEach","animateWidthAndHeight","clearTimeout","setTimeout","transformTiming","object","changes","then","_this2","_filter","matched","x","matches","unmatched","hiddenMatched","makeRoomBeforeFade","prepareFade","opacityTimingCSS","fade","opacity","clearFade","animate","onFadeEnd","opacityTiming","masonry","rowHeight","parseInt","getComputedStyle","getPropertyValue","rowGap","rowSpan","Math","ceil","querySelector","getBoundingClientRect","height","gridRowEnd","position","width","transformOrigin","margin","_this3","id","scroll","document","body","scrollTop","scrollLeft","gridRect","rect","top","left","itemRect","scaleX","scaleY","_this4","set","children","get"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('Griddie', factory) :\n    (global.Griddie = factory());\n}(this, (function () { 'use strict';\n\n    const isPromise = object => !!object && (typeof object === 'object' || typeof object === 'function') && typeof object.then === 'function';\n\n    class Griddie {\r\n        constructor(options) {\r\n            this._options = {};\r\n\r\n            this._animationTimeout = null; // TODO: replace with toolbox.timer ...\r\n            this._filterTimeout = null; // TODO: replace with toolbox.timer ...\r\n\r\n            this.options = options;\r\n            this.layout();\r\n            window.addEventListener('resize', this.layout);\r\n        }\r\n\r\n        set options(options) {\r\n            this._options = {\r\n                ...{\r\n                    animateWidthAndHeight: true, // TODO: single item exceptions ...\r\n                    opacityTiming: 300,\r\n                    transformTiming: 300,\r\n                    masonry: false\r\n                },\r\n                ...options\r\n            };\r\n            this._options.transformTimingCSS = this.options.transformTiming / 1000;\r\n            this._options.opacityTimingCSS = this.options.opacityTiming / 1000;\r\n            this._options.items = [...this._options.element.children];\r\n        }\r\n\r\n        get options() {\r\n            return this._options;\r\n        }\r\n\r\n        animate(layoutChanges = () => {}) {\r\n            const animation = new Promise((resolve, reject) => {\r\n                const callback = () => {\r\n                    this.clear();\r\n                    this.layout(0);\r\n                    this.store(1);\r\n                    this.transform(0);\r\n\r\n                    requestAnimationFrame(() => {\r\n                        this._options.element.style.transition = 'height ' + this._options.transformTimingCSS + 's ease';\r\n                        [...this._options.items].filter(item => item.style.display !== 'none').forEach(item => {\r\n                            let transition = 'transform ' + this._options.transformTimingCSS + 's ease';\r\n                            if (this.options.animateWidthAndHeight) {\r\n                                transition += ', width ' + this._options.transformTimingCSS + 's ease, height ' + this._options.transformTimingCSS + 's ease';\r\n                            }\r\n\r\n                            item.style.transition = transition;\r\n                        });\r\n\r\n                        requestAnimationFrame(() => this.transform(1));\r\n\r\n                        clearTimeout(this._animationTimeout);\r\n                        this._animationTimeout = setTimeout(() => {\r\n                            this.clear();\r\n                            resolve();\r\n                        }, this.options.transformTiming);\r\n                    });\r\n                };\r\n\r\n                this.clear();\r\n                this.store(0);\r\n                this.transform(0);\r\n\r\n                const changes = layoutChanges();\r\n\r\n                if (isPromise(changes)) {\r\n                    changes.then(() => callback());\r\n                } else {\r\n                    callback();\r\n                }\r\n            });\r\n\r\n            return animation;\r\n        }\r\n\r\n        filter(filter = '*') {\r\n            const matched = this._options.items.filter(x => x.matches(filter));\r\n            const unmatched = this._options.items.filter(x => !x.matches(filter));\r\n            const hiddenMatched = matched.filter(x => x.style.display === 'none');\r\n            const makeRoomBeforeFade = matched.length !== hiddenMatched.length;\r\n            const prepareFade = () => {\r\n                this._options.items.forEach(item => {\r\n                    item.style.transition = 'opacity ' + this._options.opacityTimingCSS + 's ease';\r\n                });\r\n            };\r\n            const fade = () => {\r\n                matched.forEach(item => {\r\n                    item.style.opacity = 1;\r\n                });\r\n\r\n                unmatched.forEach(item => {\r\n                    item.style.opacity = 0;\r\n                });\r\n            };\r\n            const clearFade = () => {\r\n                this._options.items.forEach(item => {\r\n                    item.style.transition = '';\r\n                    item.style.opacity = '';\r\n                });\r\n\r\n                matched.forEach(item => {\r\n                    item.style.display = '';\r\n                });\r\n\r\n                unmatched.forEach(item => {\r\n                    item.style.display = 'none';\r\n                });\r\n            };\r\n\r\n            const animation = this.animate(() => {\r\n                const fadeAfterAnimation = new Promise((resolve, reject) => {\r\n                    const onFadeEnd = () => {\r\n                        this.store(0);\r\n                        this.transform(0);\r\n                        resolve();\r\n                    };\r\n\r\n                    prepareFade();\r\n\r\n                    if (hiddenMatched.length) {\r\n                        hiddenMatched.forEach(item => {\r\n                            item.style.opacity = 0;\r\n                        });\r\n                    }\r\n\r\n                    requestAnimationFrame(() => {\r\n                        if (hiddenMatched.length) {\r\n                            hiddenMatched.forEach(item => {\r\n                                item.style.display = '';\r\n                            });\r\n                        }\r\n\r\n                        if (hiddenMatched.length && makeRoomBeforeFade) {\r\n                            requestAnimationFrame(() => onFadeEnd());\r\n                        } else if (!hiddenMatched.length || (hiddenMatched.length && !makeRoomBeforeFade)) {\r\n                            requestAnimationFrame(() => {\r\n                                fade();\r\n\r\n                                clearTimeout(this._filterTimeout);\r\n\r\n                                this._filterTimeout = setTimeout(() => {\r\n                                    clearFade();\r\n\r\n                                    requestAnimationFrame(() => onFadeEnd());\r\n                                }, this.options.opacityTiming);\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n\r\n                return fadeAfterAnimation;\r\n            });\r\n\r\n            animation.then(() => {\r\n                if (makeRoomBeforeFade) {\r\n                    prepareFade();\r\n\r\n                    requestAnimationFrame(() => {\r\n                        fade();\r\n\r\n                        clearTimeout(this._filterTimeout);\r\n\r\n                        this._filterTimeout = setTimeout(() => clearFade(), this.options.opacityTiming);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        destroy() {\r\n            // TODO: do it\r\n        }\r\n\r\n        refresh() {\r\n            // TODO: do it\r\n        }\r\n\r\n        // TODO: private\r\n        layout() {\r\n            if (this.options.masonry) {\r\n                const rowHeight = parseInt(window.getComputedStyle(this._options.element).getPropertyValue('grid-auto-rows'));\r\n                const rowGap = parseInt(window.getComputedStyle(this._options.element).getPropertyValue('grid-row-gap'));\r\n\r\n                this._options.items.filter(item => item.style.display !== 'none').forEach(item => {\r\n                    const rowSpan = Math.ceil((item.querySelector('.content').getBoundingClientRect().height + rowGap) / (rowHeight + rowGap));\r\n                    item.style.gridRowEnd = 'span ' + rowSpan;\r\n                });\r\n            }\r\n        }\r\n\r\n        // TODO: private\r\n        clear() {\r\n            this._options.element.style.position = '';\r\n            this._options.element.style.width = '';\r\n            this._options.element.style.height = '';\r\n            this._options.element.style.transition = '';\r\n\r\n            this._options.items.forEach(item => {\r\n                item.style.transform = '';\r\n                item.style.transformOrigin = '';\r\n                item.style.position = '';\r\n                item.style.transition = '';\r\n                item.style.width = '';\r\n                item.style.height = '';\r\n                item.style.margin = '';\r\n            });\r\n        }\r\n\r\n        // TODO: private\r\n        store(id = 0) {\r\n            const scroll = {\r\n                top: document.body.scrollTop,\r\n                left: document.body.scrollLeft\r\n            };\r\n            const gridRect = this._options.element.getBoundingClientRect();\r\n            if (!('rect' in this._options.element)) {\r\n                this._options.element.rect = [];\r\n            }\r\n            this._options.element.rect[id] = {\r\n                width: gridRect.width,\r\n                height: gridRect.height,\r\n                top: gridRect.top + scroll.top,\r\n                left: gridRect.left + scroll.left\r\n            };\r\n            this._options.items.filter(item => item.style.display !== 'none').forEach(item => {\r\n                if (!('rect' in item)) {\r\n                    item.rect = [];\r\n                }\r\n                const itemRect = item.getBoundingClientRect();\r\n                item.rect[id] = {\r\n                    width: itemRect.width,\r\n                    height: itemRect.height,\r\n                    top: itemRect.top + scroll.top - this._options.element.rect[id].top,\r\n                    left: itemRect.left + scroll.left - this._options.element.rect[id].left,\r\n                    scaleX: 1,\r\n                    scaleY: 1\r\n                };\r\n                item.rect[id].top = item.rect[id].top >= 0 ? item.rect[id].top : 0;\r\n                item.rect[id].left = item.rect[id].left >= 0 ? item.rect[id].left : 0;\r\n                if (id === 1) {\r\n                    const scaleX = item.rect[0].width / itemRect.width;\r\n                    const scaleY = item.rect[0].height / itemRect.height;\r\n                    if (scaleX > 0) {\r\n                        item.rect[id].scaleX = 1 / scaleX;\r\n                    }\r\n                    if (scaleY > 0) {\r\n                        item.rect[id].scaleY = 1 / scaleY;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        // TODO: private\r\n        transform(id = 0) {\r\n            this._options.element.style.position = 'relative';\r\n            this._options.element.style.width = this._options.element.rect[id].width + 'px';\r\n            this._options.element.style.height = this._options.element.rect[id].height + 'px';\r\n\r\n            this._options.items.filter(item => item.style.display !== 'none').forEach(item => {\r\n                let transform = 'translate3d(' + item.rect[id].left + 'px,' + item.rect[id].top + 'px, 0px)';\r\n\r\n                if (!this.options.animateWidthAndHeight) {\r\n                    transform += ' scale3d(' + item.rect[id].scaleX + ', ' + item.rect[id].scaleY + ', 1)';\r\n                }\r\n\r\n                if (this.options.animateWidthAndHeight || id === 0) {\r\n                    item.style.width = item.rect[id].width + 'px';\r\n                    item.style.height = item.rect[id].height + 'px';\r\n                }\r\n\r\n                item.style.margin = 0;\r\n                item.style.position = 'absolute';\r\n                item.style.transformOrigin = '0 0 0';\r\n                item.style.transform = transform;\r\n            });\r\n        }\r\n    }\n\n    return Griddie;\n\n})));\n"],"file":"griddie.min.js"}